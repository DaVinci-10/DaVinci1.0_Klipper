# This file contains common pin mappings for Sovol Sv01 printer. To
# use this config, the firmware should be compiled for the AVR
# atmega2560.

# See the example.cfg file for a description of available parameters.
# Rename this file to printer.cfg and drag and drop into ~/klipper/ using winSCP or other file transfer magic
# # Hope it helps
# [*] Enable extra low-level configuration options
#     Micro-controller Architecture (Atmega AVR)  --->
#     Processor model (atmega2560)  --->
#     Processor speed (16Mhz)  --->
#     Communication interface (UART0)  --->
# (250000) Baud rate for serial port
# ()  GPIO pins to set at micro-controller startup
# 
# avrdude -p atmega2560 -c wiring -P /dev/ttyUSB0 -b 115200 -U flash:w:out/klipper.elf.hex
# Remember to replace "ttyUSB0" with your own serial port if it's different from mine. To check whether the firmware has been successfully updated, enter the following command:

#  ls /dev/serial/by-id/ 
# You should see something like this as the result:

# usb-FTDI_FT232R_USB_UART_AB0MOX1H-if00-port0
# This is the device ID of your motherboard. Make sure to update the device ID in your printer configuration file as well, by adding the following line under the "[mcu]" section:

# [mcu]
# serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AB0MOX1H-if00-port0
# That's it! With these steps, you should be able to successfully install Klipper on your Creality Ender 5 PLUS with TMC2208 driver and Atmega2560 chip.

# #######################################
# TMC2208 configuration
# #######################################
 
# For TMC2208 UART
#   1) Remove all of the jumpers below the stepper drivers
#   2) Place jumpers on the red pin headers labeled XUART (XUART, YUART etc.)
 
# [tmc2208 stepper_z]
# microsteps: 16
# run_current: 0.650
# hold_current: 0.450
# stealthchop_threshold: 30
 
# [tmc2208 extruder]
# microsteps: 16
# run_current: 0.800
# hold_current: 0.500
# stealthchop_threshold: 5
 
# [tmc2208 stepper_z1]
# microsteps: 16
# run_current: 0.650
# hold_current: 0.450
# stealthchop_threshold: 30

# TMC Uart Mod Pins:
# https://github.com/adelyser/Marlin-CR30/wiki
# [tmc2208 stepper_x]
# uart_pin: PB0
# 
# [tmc2208 stepper_y]
# uart_pin: PB1
# 
# [tmc2208 stepper_z]
# uart_pin: PA13
# 
# [tmc2208 extruder]
# uart_pin: PA14
# 
# Check into this for fans
#  PH5 (also called that in the Sovol Printer.cfg) is the heater pin for Heater BED! So that can't be it. PH6 is the component cooler and the hotend cooler is currently running on PH7
# [multi_pin my_fan]
# pins: PH6, PH7
# 
# [fan]
# pin = multi_pin:my_fan

[stepper_x]
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
microsteps: 16
rotation_distance: 40
endstop_pin: ^PE5
position_endstop: 0
position_max: 400
homing_speed: 50

[stepper_y]
step_pin: PF6
dir_pin: PF7
enable_pin: !PF2
microsteps: 16
rotation_distance: 40
endstop_pin: ^PJ1
position_endstop: 0
position_max: 360
homing_speed: 50

[stepper_z]
step_pin: PL3
dir_pin: !PL1
enable_pin: !PK0
microsteps: 16
rotation_distance: 8
# step_distance: .0025
endstop_pin:probe:z_virtual_endstop
position_max: 450
position_min: -4
homing_speed: 10
# This seems to set the Z home speed
second_homing_speed: 3

[stepper_z1] #Enable for Dual Z using e1 motor
step_pin: PC1
dir_pin: !PC3
enable_pin: !PC7
microsteps: 16
rotation_distance: 8

[safe_z_home]
home_xy_position: 208.5, 184.5 #with probe being at nozzle position #175, 175
speed: 50.0
z_hop: 20
z_hop_speed: 5
move_to_previous: False

[extruder]
max_extrude_only_distance: 100.0
step_pin: PA4
dir_pin: !PA6
enable_pin: !PA2
microsteps: 16
rotation_distance: 7.8144
# step_distance: .002422
nozzle_diameter: 0.400
filament_diameter: 1.750
pressure_advance: 0.082
pressure_advance_smooth_time: 0.040000
heater_pin: PB4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK5
control = pid
pid_kp = 26.989
pid_ki = 1.621
pid_kd = 112.341
#control: pid
#pid_Kp: 31.147
#pid_Ki: 2.076
#pid_Kd: 116.803
min_temp: 0
max_temp: 300

# [extruder1] #Enable for Dual E
# step_pin: PC1 
# dir_pin: PC3 
# enable_pin: !PC7 
# microsteps: 16 
# rotation_distance: 33.683 
# nozzle_diameter: 0.400 
# filament_diameter: 1.750 
# heater_pin: PB4 
# sensor_type: EPCOS 100K B57560G104F 
# sensor_pin: PK5 
# min_temp: 0 
# max_temp: 250 
# min_extrude_temp: 180 
# max_extrude_only_distance: 500.0 
# pressure_advance: 0.07 
# pressure_advance_smooth_time: 0.040 
# control: watermark #run pid tune, below is default
# #pid_Kp: 22.2 
# #pid_Ki: 1.08 
# #pid_Kd: 114 

[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PK6
control: pid
pid_kp: 75.943
pid_ki: 1.077
pid_kd: 1338.496
# control: pid
# pid_Kp: 72.174
# pid_Ki: 1.816
# pid_Kd: 717.224
min_temp: 0
max_temp: 110


[fan]
pin: PH6

[mcu]
# serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AG0KEN1G-if00-port0
# serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AB0MA0EZ-if00-port0
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AB0M9X6L-if00-port0
#[temperature_sensor mega2560_mcu_temp] #apparently not supported on atmega 2560
# sensor_type: temperature_mcu
# gcode_id: mega2560

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 3000
max_z_velocity: 16
max_z_accel: 100
#acceleration_order: 6
#min_jerk_limit_time: 0.03
#max_extrude_only_velocity: 120
#max_extrude_only_accel: 1500

[bltouch]
sensor_pin: ^PD3
control_pin: PB5
pin_move_time: 0.500
stow_on_each_sample: True
#pin_up_reports_not_triggered: False
speed: 3
lift_speed: 20
samples: 5
sample_retract_dist: 5
samples_result: median
samples_tolerance: 0.01
samples_tolerance_retries: 5
# pin_up_touch_mode_reports_triggered: False #dont know about this one... why is it there?
x_offset: -33.5
y_offset: -9.5
# z_offset: 0.600
# z_offset: 2.600 #2.186

[bed_mesh]
speed:200
horizontal_move_z: 5
mesh_min: 25, 25
mesh_max: 325, 325
probe_count: 17,17 #5,5
mesh_pps: 5,5 #2,2
algorithm: bicubic
bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above may
#   be applied to change the amount of slope interpolated. Larger
#   numbers will increase the amount of slope, which results in more
#   curvature in the mesh. Default is .2.
zero_reference_position: 175,175
fade_start: 1.0
fade_end: 10.0

[bed_screws]
screw1: 30,33
screw2: 320,39
screw3: 320,320
screw4: 30,326

[screws_tilt_adjust]
screw2: 65,335
screw2_name: rear left screw
screw3: 354,335
screw3_name: rear right screw
screw4: 356,44
screw4_name: front right screw
screw1: 66,42
screw1_name: front left screw
horizontal_move_z: 10.0
speed: 50.0
screw_thread: CW-M4

[display]
lcd_type: st7920
cs_pin: PH1
sclk_pin: PA1
sid_pin: PH0
encoder_pins: ^PC4, ^PC6
click_pin: ^!PC2

[filament_switch_sensor filament_sensor]
switch_pin:PE4

# [include mainsail.cfg]


# [virtual_sdcard]
# path: ~/gcode_files

#-----Macros-----

[pause_resume]

[display_status]

# [gcode_macro CANCEL_PRINT]
# rename_existing: BASE_CANCEL_PRINT
# gcode:
#     TURN_OFF_HEATERS
#     CLEAR_PAUSE
#     SDCARD_RESET_FILE
#     BASE_CANCEL_PRINT

# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# gcode:
#     ##### set defaults #####
#     {% set x = params.X|default(230) %}      #edit to your park position
#     {% set y = params.Y|default(230) %}      #edit to your park position
#     {% set z = params.Z|default(10)|float %} #edit to your park position
#     {% set e = params.E|default(1) %}        #edit to your retract length
#     ##### calculate save lift position #####
#     {% set max_z = printer.toolhead.axis_maximum.z|float %}
#     {% set act_z = printer.toolhead.position.z|float %}
#     {% set lift_z = z|abs %}
#     {% if act_z < (max_z - lift_z) %}
#         {% set z_safe = lift_z %}
#     {% else %}
#         {% set z_safe = max_z - act_z %}
#     {% endif %}
#     ##### end of definitions #####
#     SAVE_GCODE_STATE NAME=PAUSE_state
#     BASE_PAUSE
#     G91
#     G1 E-{e} F2100
#     G1 Z{z_safe}
#     G90
#     G1 X{x} Y{y} F6000


# [gcode_macro RESUME]
# rename_existing: BASE_RESUME
# gcode:
#     ##### set defaults #####
#     {% set e = params.E|default(1) %} #edit to your retract length
#     G91
#     G1 E{e} F2100
#     G90
#     RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
#     BASE_RESUME
#*#

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 54.4
shaper_type_y = mzv
shaper_freq_y = 23.0

# ######################################

[z_tilt]
z_positions: 50, 175
    350,175
points: 50, 175
    350,175
speed: 50
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.01

# ######################################################################
# #Bed Mesh
# ######################################################################

# [gcode_macro G29]
# gcode:
#  BED_MESH_CALIBRATE
#  BED_MESH_PROFILE SAVE=p1
#  G1 X0 Y0 Z5 F5000

# #*# <---------------------- SAVE_CONFIG ---------------------->
# #*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
# #*#
# #*# [bed_mesh default]
# #*# version = 1
# #*# points =
# #*# 	  -0.027500, 0.005000, 0.062500, 0.097500, 0.145000
# #*# 	  -0.010000, -0.020000, -0.030000, -0.005000, 0.032500
# #*# 	  -0.020000, -0.040000, -0.042500, -0.002500, 0.067500
# #*# 	  0.057500, 0.017500, 0.030000, 0.045000, 0.097500
# #*# 	  0.007500, 0.010000, 0.032500, 0.042500, 0.100000
# #*# x_count = 5
# #*# y_count = 5
# #*# mesh_x_pps = 2
# #*# mesh_y_pps = 2
# #*# algo = lagrange
# #*# tension = 0.2
# #*# min_x = 20.0
# #*# max_x = 325.0
# #*# min_y = 20.0
# #*# max_y = 325.0
# #*#
# #*# [extruder]
# #*# control = pid
# #*# pid_kp = 26.029
# #*# pid_ki = 1.446
# #*# pid_kd = 117.129
# #*#
# #*# [heater_bed]
# #*# control = pid
# #*# pid_kp = 74.207
# #*# pid_ki = 0.836
# #*# pid_kd = 1647.394


