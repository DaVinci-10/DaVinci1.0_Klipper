[mcu PIS]
#serial: /dev/ttyACM0
#serial: /dev/serial/by-path/pci-0000:00:1d.0-usb-0:1.5:1.0 
serial: /dev/serial/by-id/usb-Klipper_rp2040_E661AC88634E8526-if00
restart_method: command
#restart_method: rpi_usb

[temperature_sensor heater_chamber]
sensor_type: temperature_mcu
sensor_mcu: PIS
gcode_id: C #chamber #changed to C to support chamber temps in Repetier-Server

[adxl345]
cs_pin: PIS:gpio13
#spi_bus: spi1a
spi_software_sclk_pin: PIS:gpio10
spi_software_mosi_pin: PIS:gpio11
spi_software_miso_pin: PIS:gpio12
axes_map: x,z,-y

[resonance_tester]
#accel_chip_x: adxl345 shtadxl
accel_chip: adxl345
accel_per_hz: 50  # default is 75
probe_points:
    100,100,20

[output_pin power_mode] # Improve power stability
pin: PIS:gpio23

[led PIS_READY_led]
red_pin: !PIS:gpio25
#green_pin:
#blue_pin:
#white_pin:
#cycle_time: 0.0166 #0.010
hardware_pwm: True
initial_RED: 1.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0


[gcode_macro M300.3] # LED Light Control, uncomment for Sound Control too
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_LED LED=PIS_led red=0.255
    #SET_PIN PIN=_BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    #SET_PIN PIN=_BEEPER_pin VALUE=0
    SET_LED LED=PIS_led red=0.020
