# This printer config was written by DaVinci10 on Klipper Discord(s) and can be reached there. Feel free to DM on either platform.
# To keep printer.cfg from being a mile long, this config file is included [include DaVinci_1_0_printer.cfg] in printer.cfg 
# printer.cfg has the Auto-Save area and [include]'s for additional features.
# This cfg is intended for a Xyz Printing Inc. DaVinci 1.0 3dPrinter. (not for 1.0A, 2.0, 2.0a, or AIO)
# The stock DaVinci used standard linear-rod motion system.
# SAFETY WARNING: The thermistors on the DaVinci have custom definintion in this config. They seem to be working but are not 100% verified.
# These were hand built so please be careful and if you have a temperature probe availible to assist in verification please let me know.
# So far, so good. But to reiterate this is not for 1.0A, 2.0, 2.0A, or AiO printers. If anyone needs help trying to modify for those please let me know.
# Firmware make via KIAUH or make
#[*] Enable extra low-level configuration options
#    Micro-controller Architecture (SAM3/SAM4/SAM E70 (Due and Duet))  --->
#    Processor model (SAM3x8e (Arduino Due))  --->
#    Communication interface (USB)  --->
#    USB ids  --->
#      GPIO pins to set at micro-controller startup 
#                                [!PD5,!PD9,!PB4,!PB7,!PA12,!PA13,PD6,PA0,PB5,PB8]
# copy/paste all inside brackets [x-st,y-st,z-st,ex-st,bed-h,ext-h,x-en,y-en,z-en,ext-en]
# GPIO startup pins includes heaters and motors are forced off at boot, before Klipper has taken control. 
# If gpio pins at startup is used, a Firmware-Reset will will clear phase errors by forcing stepper driver counts to be cleared from mcu. see phase tracking
# The DaVinci have NEMA17 1.8* stepper motors and A4988 drivers,
# X and Y use 2mm belts and 20 tooth pulleys; 
# X and Extruder motors use a 42-42 0.9a
# Y and Z axis uses a NEMA17 42-48 1.0a
# Z Motor drives an M8 Threaded Rod single start and has a resolution of 1.25mm/full turn, 0.00625mm full_step, and 0.000390625mm @16 micro_steps.
# The Extruder is a direct drive hobbed gear with integrated optical filament runout and opto-mechanical motion sensor.
# The optical filament runout sensor detects end of filament before it gets to the drive gear causing a jam.
# This can auto-pause the print and allow a new spool filament to be loaded thereby saving the print.
# The runout sensor is set to default enabled: but may be disabled to help with transparent/translucent filaments that are hard to detect with an optical sensor.
# The optical filament motion sensor opto-mechanicaly detects movement in the extruder/idler gear train.
# The ability to determine filament width using this detector may be of value but yet to be setup in klipper.
# It is intended to detect filament slowing down from width issues, slipping/grinding due to incorect temps, and full on extruder jams (default enabled: but can be disabled)
# The LCD is a WINStar 1604 and is not yet operational in this config. I believe its a hd47780 init and/or a font issue. further work was done by others as well.
# Stock extruder [200 steps/rot]*[16 steps]/[99 steps/mm] 32.3232mm rotation_distance
# Stock xy_steppers [200 steps/rot]*[16 steps]/[80 steps/mm] 40mm rotation_distance
# Stock z_stepper [200 steps/rot]*[16 steps]/[2560 steps/mm] 1.25mm rotation_distance (this is an M8 single-start threaded rod)
# Stock 1.0 has the purge bucket and wiper in a slot to the right of and behind the z rod holder bracket. a Slot if you will. 
# This can lead to toolhead crash if both x and y are homed and a -x move of more than a few mm. 
# So beware and use a safe_home spot forward of this bracket. Also make sure you home Y before X in all cases.
# May work on a homing_override to enhance this and try and prevent moves that can crash the toolhead. 
# I began work on a purge and wipe macros, but they are not ready for primetime. If your willing to helpout please let me know.
# safe_home sets Y at 206 so first X move isnt in danger of crashing into upper Z bracket. But sits forward of purge bucket/wiper.

[mcu]
#change according to "ls -lta /dev/serial/by-id/*" via ssh console session or by KIAUH 4-advanced_menu 5-get_mcu_id.
serial: /dev/serial/by-id/usb-Klipper_sam3x8e_20313252773538383235303130303236-if00
baud: 250000
restart_method: command

[printer] 
#Speeds and Accelerations are set here, but please set to reasonable speeds in slicer. Slicer can and does override these.
#Acceleration has been tested as high as 30k@100mm/s but rapidly falls to 1500@320mm/s
#I was able to successfully print at 320/1500 on a PolySonic the Hedgehog using Polymaker PolySonic Blue PLA filament.
#Input shaper says to keep acceleration under 1700 for best results. 
kinematics: cartesian
max_velocity: 150 #300 #100
max_accel: 1500 #3000 #30000
minimum_cruise_ratio: 0.5
#max_accel_to_decel: 1500 #this has been replaced with cruise_ratio
max_z_velocity: 5 #can goto 6 but not with heavy parts on build plate
max_z_accel: 150 
square_corner_velocity: 3

[safe_z_home]
home_xy_position: 233, 206 #safe spot is 233, 206 forward of Z rod bracket danger zone.
speed: 40 #93
z_hop: 10
z_hop_speed: 5.0
move_to_previous: False

#[endstop_phase] #advanced klipper feature please read up on it before enabling

[stepper_x]
step_pin: PD5
dir_pin: PD4
enable_pin: !PD6
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 40
endstop_pin: ^PD7
position_min: -4
position_endstop: 199
position_max: 199.125
homing_speed: 90 #100 #50 #safe_home overrides this
homing_retract_dist: 1.25 #2.5 5.0
homing_retract_speed: 5.0
second_homing_speed: 2.5 #5
step_pulse_duration: 0.000002

#[endstop_phase stepper_x]
##trigger_phase: 0/64
#endstop_accuracy: 0.2

[stepper_y]
step_pin: PD9
dir_pin: !PD8
enable_pin: !PA0
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 40
endstop_pin: ^PA1
position_min: -5
position_endstop: 211.00
position_max: 211.125
homing_speed: 90 #100 #40 #safe_home overrides this
homing_retract_dist: 1.25 #2.5 5.0
homing_retract_speed: 5.0
second_homing_speed: 2.5 #5.0
step_pulse_duration: 0.000002

#[endstop_phase stepper_y]
##trigger_phase: 0/64
#endstop_accuracy: 0.2

[stepper_z]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PB5
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 1.25
endstop_pin: ^PB9
#position_endstop: -0.000
position_min: -3.75 #0 #-2.5125 #-1.25
position_max: 201.25
homing_speed: 5
homing_retract_dist: 1.25 #2.5 5.0
homing_retract_speed: 3
second_homing_speed: 2
step_pulse_duration: 0.000002

#[endstop_phase stepper_z]
##trigger_phase: 0/64
#endstop_accuracy: 0.01210 #0.00625 #0.20
#endstop_align_zero: True
## when True set optimum layer height in slicer(s) to 0.00625mm increments to sync layers to full steps 1.25/200
## 0.20mm is good standard layers, but for example use 0.25mm (not 0.24) to utilize full stepping.
## set optimum Z moves for zhop and retracts and probe moves to sync to full steps.
## Set optimum first layer height to 0.250mm and 0.20 for other layers. 
## Min layer height I've found is 0.15mm but I've been down to 0.1mm or less successfully in variable layer height.
## I've gone to a "full turn" Z hop in slicer at 1.25mm on all layers above 0.1mm up to 198mm, this avoids nozzle probe digging in especially during travel moves.

[thermistor DaVinci_e0] #pullup@4.7k
temperature1: 25
resistance1: 9733
temperature2: 110
resistance2: 1330
temperature3: 200
resistance3: 466

[extruder]
step_pin: PB7
dir_pin: PB6
enable_pin: !PB8
microsteps: 16
rotation_distance: 32.3232 #99steps/mm from Repetier 3200/99=32.3232
full_steps_per_rotation: 200
#step_pulse_duration: 0.000002
nozzle_diameter: 0.400
filament_diameter: 1.750
smooth_time: 0.4 #2
pressure_advance: 0.03600 #0.04425
heater_pin: PA13
#pwm_cycle_time: 0.0166
sensor_type: DaVinci_e0
pullup_resistor: 4700
sensor_pin: PB20
#control: watermark
min_temp: -20
max_temp: 400
min_extrude_temp: 150 # 170

[verify_heater extruder] #I have not verified the effects of these two, so watch for errors.
max_error: 4000
check_gain_time: 20
hysteresis: 5
heating_gain: 2

[verify_heater heater_bed] #I have not verified the effects of these two, so watch for errors.
max_error: 400
check_gain_time: 20
hysteresis: 5
heating_gain: 2

[thermistor DaVinciBed] # pullup@4.7k
temperature1: 25
resistance1: 42420
temperature2: 100
resistance2: 5420
temperature3: 120
resistance3: 3420

[heater_bed]
pwm_cycle_time: 0.0166
heater_pin: PA12
sensor_type: DaVinciBed
sensor_pin: PB21
pullup_resistor: 4700
control: watermark
min_temp: -20
max_temp: 200

[output_pin _BEEPER_pin] #note: a name with preceding underscore "_" hides the control for it from mainsail/fluidd
pin: PB15
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001

[led chamber_light]
white_pin: PB11
#pwm: True
hardware_pwm: False
#value: 0.75
#shutdown_value: 0
cycle_time: 0.00166 #0.010 #0.0166 #0.001
initial_WHITE: 1

[led lcd_light]
green_pin: PB23
#pwm: True
hardware_pwm: False
#value: 0.75
#shutdown_value: 0
cycle_time: 0.00166 #0.010 #0.0166 #0.001
initial_GREEN: 1

[temperature_sensor sam3x8e_mcu_temp]
sensor_type: temperature_mcu
gcode_id: sam3x8e

#[multi_pin my_fan] #Use if two parts cooling fans with eeprom cart ports until Klipper can control them independanly, keep watch for updates on this.
#pins:PB0,PB1

[fan]
#pin: multi_pin:my_fan #for use in controlling two independant parts fans as one, see note on multi_pin
pin: PC26 #PD1 #fake pin assignment FAN2 on 1.0 simply for monitoring slicer activation of parts fan, or have lucked out on blue wire on toolhead pcb.

#[fan_generic sam_parts_fan] #test of pwm parts fan using Cart 1 port as pwm port
#pin: PB0 #PD0 is FAN1, use it if you have parts_fan_mod from repetier firmware
#max_power: 1.0
#shutdown_speed: 0
#cycle_time: 0.010
#hardware_pwm: False
#kick_start_time: 0.100
#off_below: 0.0

#[controller_fan system_fan] #test of pwm fan for additional cooling mobo/stepper drivers using Cart 2 port
#pin: PB1 #PC26 #FAN2 is PC26 if you are lucky, and have blue wire on toolhead pcb ribbon cable.
#hardware_pwm: True
#kick_start_time: 1.0
#max_power: 1.0
#idle_timeout: 300
#idle_speed: 0.5
#shutdown_speed: 0.0
#heater: heater_bed, extruder
#fan_speed: 1.0
#stepper: stepper_x, stepper_y, stepper_z, extruder

[heater_fan my_nozzle0_fan]
pin: PD0 #FAN1
heater: extruder
heater_temp: 50.0
kick_start_time: 0.200
fan_speed: 1.0
shutdown_speed: 1.0
off_below: 0.49

[gcode_macro PAUSE_PARK] #specific macro for davinci sensors, feel free to mod to your liking. 
gcode:
  G91
  G0 Z5 F120
  G90
  G0 X233 Y206 F3000

[filament_switch_sensor e0_switch_sensor] #feel free to play
pause_on_runout: True
switch_pin: !PA15
runout_gcode:
  M117 Filament Out detected!!! Pausing print
  PAUSE_PARK
# end gcode
#insert_gcode:
#event_delay:
#pause_delay:

[filament_motion_sensor e0_motion_sensor] #I need to investigate the possibilities of this sensor. feel free to play
pause_on_runout: True
detection_length: 2.22 #7.0 #Need to refine this
extruder: extruder
switch_pin: PA17
#pause_on_runout: FALSE
#runout_gcode: PAUSE
runout_gcode:
  M117 Filament Skip detected!!! Pausing print
  PAUSE_PARK
# end gcode
#insert_gcode:
#event_delay:
#pause_delay:

[filament_switch_sensor Top_Cover]
switch_pin: PC24
pause_on_runout: True
runout_gcode:
  M117 Top Cover Open detected!!! Pausing print
  PAUSE_PARK
# end gcode

[filament_switch_sensor Front_Door]
switch_pin: PC23
pause_on_runout: False
runout_gcode:
  M117 Front Door Open detected!!! Pausing print
  PAUSE_PARK
# end gcode

#[filament_switch_sensor Cartrige1] #If still running cartridges, this can detect if cart gets lifted due to filament jam/out. use and enhance at your pleasure.
#pause_on_runout: True
#switch_pin: ^PB0  # Filament Cart1 pin
#runout_gcode:
#insert_gcode:
#event_delay:
#pause_delay:

#[filament_switch_sensor Cartrige2]
#pause_on_runout: True
#switch_pin: ^!PB1  # Filament Cart1 pin
#runout_gcode:
#insert_gcode:
#event_delay:
#pause_delay:

[filament_switch_sensor beddetect] #This is second pin that goes high (PB2,PC25) when nozzle is grounded on corner pads, hits bed screws, or conductive bed surface.
switch_pin: ^!PC25
pause_on_runout: True
pause_delay: 0.0166
runout_gcode:
  M117 Nozzle crash detected!!! Pausing print
  PAUSE_PARK
# end gcode

[smart_effector]
pin: ^!PB2
control_pin: PB0 #fake eeprom for smart_effector, enables sensitivity option in config,. assigned to unused cart1 pin.
probe_accel: 10
recovery_time: 2.0 #0.4 #0.0166
x_offset: 0.00
y_offset: 0.00 #-5.00 #actual probe tip is -5. If probe tip is removed/ground down and you use nozzle itself as probe, choose 0.00
#z_offset: 0.00 #-0.28 #actual offset, but in reality since the pads are 0.28mm thick, it equates to 0 offset.
speed: 3
samples: 5
samples_result: median
sample_retract_dist: 2 #0.625 #0.750 #0.5 #0.125 #1.75 #1.5 #1.25 #2.5 #3.75 #1.25 #2.5 #1.25 #5
lift_speed: 4
samples_tolerance: 0.0125 #0.016
samples_tolerance_retries: 50
# ***ABL*** see printer.cfg include selection for screws or for mesh

#[probe]
# We use [smart_effector] instead of [probe] to add probe acceleration option 
#pin: !PB2
#x_offset: 0 #
#y_offset: 0 # probe has y_offset, but probe position moves to probe pads already take this account so offset is set to 0 here
#z_offset: 0 # probe pad is .28mm thick, probe offset from nozzle is .28mm so is 0 offset
#speed: 5
#samples: 3
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 5
# note, its maybe a good idea to recalculate probe pad positions and use a real Y offset so the printer can perform probes normally
# ***ABL*** see printer.cfg include selection for screws or for mesh

[firmware_retraction]
retract_length: 0.806 #0.1616 
retract_speed: 10 #20
unretract_extra_length: 0 #0.1616
unretract_speed: 10 #20

#[display] Not operational in Klipper. Buttons will work if enabled. I made the Kill button the bigger home button, just cause :)
#lcd_type: hd44780
#rs_pin: PC22
#e_pin: PB24
#d4_pin: PC6
#d5_pin: PC7
#d6_pin: PC8
#d7_pin: PC9
#up_pin: PC19 #Up Button
#down_pin: PC29 #Down Button
#back_pin: PA26 #left Button
#click_pin: PA27 #Ok Button
##next_pin: PC30 #no Right Button currently defined in klipper
#kill_pin: ^!PA28 #Home Button
#hd44780_protocol_init: True
#line_length: 16

